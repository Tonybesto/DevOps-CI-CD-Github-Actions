# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven and upload
      run: mvn  package
    - uses: actions/upload-artifact@v4.3.3
      with:
        name: my-artifact
        path: target/*.jar
    - name: Trivy FS Scan
      run: |
        trivy fs --format table -o trivy-fs-report.html .

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    - name: install jq
      run: sudo apt update && sudo apt install jq -y

  #check the quality gate status

    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx 
      uses: docker/setup-buildx-action@v3

    - name: Build Docker Image
      run: |
          docker build -t tony06/boardgame:latest .
      
    - name: Trivy Image Scan
      run: |
        trivy image --format table -o trivy-image-report.html tony06/boardgame:latest

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}  

    - name: Push Docker Image
      run: |
         docker push tony06/boardgame:latest

    - name: Kubectl Actions
      uses: tale/kubectl-action@v1
      with: 
        base64-kube-config: ${{ secrets.KUBE_CONFIG }}
    - run: |
        kubectl apply -f deployment-service.yml -n webapps
        kubectl get svc -n webapps


    
